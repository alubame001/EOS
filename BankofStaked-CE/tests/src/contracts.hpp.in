#pragma once
#include <eosio/testing/tester.hpp>

namespace eosio { namespace testing {

struct contracts {
   static std::vector<uint8_t> token_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../eosio.token/eosio.token.wasm"); }
   static std::string          token_wast() { return read_wast("${CMAKE_BINARY_DIR}/../eosio.token/eosio.token.wast"); }
   static std::vector<char>    token_abi() { return read_abi("${CMAKE_BINARY_DIR}/../eosio.token/eosio.token.abi"); } 


   static std::vector<uint8_t> bank_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/../../build/bankofstaked.wasm"); }
   static std::string          bank_wast() { return read_wast("${CMAKE_SOURCE_DIR}../../build/bankofstaked.wast"); }
   static std::vector<char>    bank_abi() { return read_abi("${CMAKE_SOURCE_DIR}/../../build/bankofstaked.abi"); }
   
};
}} //ns eosio::testing
